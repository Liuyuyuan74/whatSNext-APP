{"ast":null,"code":"var _jsxFileName = \"S:\\\\JS\\\\whatSNextAPP\\\\src\\\\element\\\\CheckboxLabels.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CheckboxLabels({\n  ingredientsData,\n  onSelectedIngredients\n}) {\n  _s();\n  // Initialize state with all ingredients checked\n  const [checkedItems, setCheckedItems] = useState(() => {\n    const initialCheckedState = {};\n    ingredientsData.forEach(([ingredient]) => {\n      initialCheckedState[ingredient] = true;\n    });\n    return initialCheckedState;\n  });\n\n  // Effect to update parent component with the checked ingredients\n  useEffect(() => {\n    const selectedIngredients = Object.entries(checkedItems).filter(([, isChecked]) => isChecked).map(([ingredient]) => ingredient);\n    onSelectedIngredients(selectedIngredients);\n  }, [checkedItems]);\n\n  // Handle checkbox change\n  const handleChange = ingredient => {\n    setCheckedItems(prevCheckedItems => ({\n      ...prevCheckedItems,\n      [ingredient]: !prevCheckedItems[ingredient]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(FormGroup, {\n    children: ingredientsData.map(([ingredient, quantity]) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: !!checkedItems[ingredient],\n        onChange: () => handleChange(ingredient)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this),\n      label: `${ingredient} (Quantity: ${quantity})`\n    }, ingredient, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(CheckboxLabels, \"KUTyRLQpHQ6KeDE8dx1FQupzQ8U=\");\n_c = CheckboxLabels;\nvar _c;\n$RefreshReg$(_c, \"CheckboxLabels\");","map":{"version":3,"names":["React","useState","useEffect","FormGroup","FormControlLabel","Checkbox","jsxDEV","_jsxDEV","CheckboxLabels","ingredientsData","onSelectedIngredients","_s","checkedItems","setCheckedItems","initialCheckedState","forEach","ingredient","selectedIngredients","Object","entries","filter","isChecked","map","handleChange","prevCheckedItems","children","quantity","control","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","label","_c","$RefreshReg$"],"sources":["S:/JS/whatSNextAPP/src/element/CheckboxLabels.js"],"sourcesContent":["import * as React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\nexport default function CheckboxLabels({ ingredientsData, onSelectedIngredients }) {\r\n  // Initialize state with all ingredients checked\r\n  const [checkedItems, setCheckedItems] = useState(() => {\r\n    const initialCheckedState = {};\r\n    ingredientsData.forEach(([ingredient]) => {\r\n      initialCheckedState[ingredient] = true;\r\n    });\r\n    return initialCheckedState;\r\n  });\r\n\r\n  // Effect to update parent component with the checked ingredients\r\n  useEffect(() => {\r\n    const selectedIngredients = Object.entries(checkedItems)\r\n      .filter(([, isChecked]) => isChecked)\r\n      .map(([ingredient]) => ingredient);\r\n    onSelectedIngredients(selectedIngredients);\r\n  }, [checkedItems]);\r\n\r\n  // Handle checkbox change\r\n  const handleChange = (ingredient) => {\r\n    setCheckedItems((prevCheckedItems) => ({\r\n      ...prevCheckedItems,\r\n      [ingredient]: !prevCheckedItems[ingredient],\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n      {ingredientsData.map(([ingredient, quantity]) => (\r\n        <FormControlLabel\r\n          key={ingredient}\r\n          control={\r\n            <Checkbox\r\n              checked={!!checkedItems[ingredient]}\r\n              onChange={() => handleChange(ingredient)}\r\n            />\r\n          }\r\n          label={`${ingredient} (Quantity: ${quantity})`}\r\n        />\r\n      ))}\r\n    </FormGroup>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAe,SAASC,cAAcA,CAAC;EAAEC,eAAe;EAAEC;AAAsB,CAAC,EAAE;EAAAC,EAAA;EACjF;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,MAAM;IACrD,MAAMa,mBAAmB,GAAG,CAAC,CAAC;IAC9BL,eAAe,CAACM,OAAO,CAAC,CAAC,CAACC,UAAU,CAAC,KAAK;MACxCF,mBAAmB,CAACE,UAAU,CAAC,GAAG,IAAI;IACxC,CAAC,CAAC;IACF,OAAOF,mBAAmB;EAC5B,CAAC,CAAC;;EAEF;EACAZ,SAAS,CAAC,MAAM;IACd,MAAMe,mBAAmB,GAAGC,MAAM,CAACC,OAAO,CAACP,YAAY,CAAC,CACrDQ,MAAM,CAAC,CAAC,GAAGC,SAAS,CAAC,KAAKA,SAAS,CAAC,CACpCC,GAAG,CAAC,CAAC,CAACN,UAAU,CAAC,KAAKA,UAAU,CAAC;IACpCN,qBAAqB,CAACO,mBAAmB,CAAC;EAC5C,CAAC,EAAE,CAACL,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMW,YAAY,GAAIP,UAAU,IAAK;IACnCH,eAAe,CAAEW,gBAAgB,KAAM;MACrC,GAAGA,gBAAgB;MACnB,CAACR,UAAU,GAAG,CAACQ,gBAAgB,CAACR,UAAU;IAC5C,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACET,OAAA,CAACJ,SAAS;IAAAsB,QAAA,EACPhB,eAAe,CAACa,GAAG,CAAC,CAAC,CAACN,UAAU,EAAEU,QAAQ,CAAC,kBAC1CnB,OAAA,CAACH,gBAAgB;MAEfuB,OAAO,eACLpB,OAAA,CAACF,QAAQ;QACPuB,OAAO,EAAE,CAAC,CAAChB,YAAY,CAACI,UAAU,CAAE;QACpCa,QAAQ,EAAEA,CAAA,KAAMN,YAAY,CAACP,UAAU;MAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CACF;MACDC,KAAK,EAAE,GAAGlB,UAAU,eAAeU,QAAQ;IAAI,GAP1CV,UAAU;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQhB,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB;AAACtB,EAAA,CA1CuBH,cAAc;AAAA2B,EAAA,GAAd3B,cAAc;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}