{"ast":null,"code":"var _jsxFileName = \"S:\\\\Program\\\\GitHub\\\\whatSNext\\\\front\\\\src\\\\element\\\\CustomizedTables.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = styled(TableCell)(({\n  theme\n}) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14\n  }\n}));\n_c = StyledTableCell;\nconst StyledTableRow = styled(TableRow)(({\n  theme\n}) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover\n  },\n  '&:last-child td, &:last-child th': {\n    border: 0\n  }\n}));\n_c2 = StyledTableRow;\nconst daysOfWeek = [\"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\", \"SUN\"];\nexport default function CustomizedTables({\n  parsedMenu\n}) {\n  _s();\n  // Declare the state at the top level of the component\n  const [currentMenu, setCurrentMenu] = useState({});\n\n  // Ensure hooks are always called at the top level\n  if (!parsedMenu) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No menu data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Initialize the menu data if it's not already set\n  if (Object.keys(currentMenu).length === 0 && parsedMenu) {\n    const menuData = {};\n    parsedMenu.split('; ').forEach(entry => {\n      const [className, dishes] = entry.split(': ');\n      menuData[className] = dishes.split(', ');\n    });\n    setCurrentMenu(menuData);\n  }\n\n  // Function to handle changing a dish\n  const handleChangeDish = (className, day) => {\n    const currentDishes = currentMenu[className];\n    const currentDishIndex = currentDishes.indexOf(currentMenu[className][day]);\n\n    // Get the next dish from the list, wrapping around if at the end\n    const nextDishIndex = (currentDishIndex + 1) % currentDishes.length;\n    const newMenu = {\n      ...currentMenu,\n      [className]: {\n        ...currentMenu[className],\n        [day]: currentDishes[nextDishIndex]\n      }\n    };\n    setCurrentMenu(newMenu); // Update the menu with the new dish\n  };\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 700\n      },\n      \"aria-label\": \"customized table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), daysOfWeek.map(day => /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"center\",\n            children: day\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: Object.entries(currentMenu).map(([className, dishes]) => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: className\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), daysOfWeek.map((day, index) => /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"center\",\n            children: [dishes[index] || \"-\", \" \", dishes[index] && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              size: \"small\",\n              onClick: () => handleChangeDish(className, index) // Handle changing the dish\n              ,\n              style: {\n                marginLeft: '10px'\n              },\n              children: \"Change\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this)]\n          }, day, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this))]\n        }, className, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(CustomizedTables, \"RFRZKdMotLg426mhQTl/HbUAuBA=\");\n_c3 = CustomizedTables;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledTableCell\");\n$RefreshReg$(_c2, \"StyledTableRow\");\n$RefreshReg$(_c3, \"CustomizedTables\");","map":{"version":3,"names":["React","useState","styled","Table","TableBody","TableCell","tableCellClasses","TableContainer","TableHead","TableRow","Paper","Button","jsxDEV","_jsxDEV","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","_c","StyledTableRow","action","hover","border","_c2","daysOfWeek","CustomizedTables","parsedMenu","_s","currentMenu","setCurrentMenu","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","menuData","split","forEach","entry","className","dishes","handleChangeDish","day","currentDishes","currentDishIndex","indexOf","nextDishIndex","newMenu","component","sx","minWidth","map","align","entries","scope","index","variant","size","onClick","style","marginLeft","_c3","$RefreshReg$"],"sources":["S:/Program/GitHub/whatSNext/front/src/element/CustomizedTables.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  '&:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  '&:last-child td, &:last-child th': {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nconst daysOfWeek = [\"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\", \"SUN\"];\r\n\r\nexport default function CustomizedTables({ parsedMenu }) {\r\n  // Declare the state at the top level of the component\r\n  const [currentMenu, setCurrentMenu] = useState({});\r\n\r\n  // Ensure hooks are always called at the top level\r\n  if (!parsedMenu) {\r\n    return <div>No menu data available</div>;\r\n  }\r\n\r\n  // Initialize the menu data if it's not already set\r\n  if (Object.keys(currentMenu).length === 0 && parsedMenu) {\r\n    const menuData = {};\r\n    parsedMenu.split('; ').forEach(entry => {\r\n      const [className, dishes] = entry.split(': ');\r\n      menuData[className] = dishes.split(', ');\r\n    });\r\n    setCurrentMenu(menuData);\r\n  }\r\n\r\n  // Function to handle changing a dish\r\n  const handleChangeDish = (className, day) => {\r\n    const currentDishes = currentMenu[className];\r\n    const currentDishIndex = currentDishes.indexOf(currentMenu[className][day]);\r\n    \r\n    // Get the next dish from the list, wrapping around if at the end\r\n    const nextDishIndex = (currentDishIndex + 1) % currentDishes.length;\r\n    const newMenu = {\r\n      ...currentMenu,\r\n      [className]: {\r\n        ...currentMenu[className],\r\n        [day]: currentDishes[nextDishIndex],\r\n      },\r\n    };\r\n\r\n    setCurrentMenu(newMenu); // Update the menu with the new dish\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Category</StyledTableCell>\r\n            {daysOfWeek.map(day => (\r\n              <StyledTableCell key={day} align=\"center\">{day}</StyledTableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {Object.entries(currentMenu).map(([className, dishes]) => (\r\n            <StyledTableRow key={className}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {className}\r\n              </StyledTableCell>\r\n              {daysOfWeek.map((day, index) => (\r\n                <StyledTableCell key={day} align=\"center\">\r\n                  {dishes[index] || \"-\"} {/* Display the dish or a dash if no dish */}\r\n                  {dishes[index] && (\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      onClick={() => handleChangeDish(className, index)} // Handle changing the dish\r\n                      style={{ marginLeft: '10px' }}\r\n                    >\r\n                      Change\r\n                    </Button>\r\n                  )}\r\n                </StyledTableCell>\r\n              ))}\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}