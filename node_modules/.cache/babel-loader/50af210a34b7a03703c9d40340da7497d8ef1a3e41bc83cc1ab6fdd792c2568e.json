{"ast":null,"code":"var _jsxFileName = \"S:\\\\Program\\\\GitHub\\\\whatSNext\\\\front\\\\src\\\\element\\\\CustomizedTables.js\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledTableCell = styled(TableCell)(({\n  theme\n}) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14\n  }\n}));\n_c = StyledTableCell;\nconst StyledTableRow = styled(TableRow)(({\n  theme\n}) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover\n  },\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0\n  }\n}));\n_c2 = StyledTableRow;\nconst daysOfWeek = [\"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\", \"SUN\"];\nexport default function CustomizedTables({\n  parsedMenu\n}) {\n  // If no menu data is available, display a message\n  if (!parsedMenu) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No menu data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Parse the string `parsedMenu` into a usable object format\n  const menuData = {};\n  parsedMenu.split('; ').forEach(entry => {\n    const [className, dishes] = entry.split(': ');\n    menuData[className] = dishes.split(', ');\n  });\n\n  // We will assume for this example that dishes for each class apply to all days\n  const structuredMenu = {};\n  Object.keys(menuData).forEach(className => {\n    structuredMenu[className] = daysOfWeek.reduce((acc, day) => {\n      acc[day] = menuData[className].shift() || \"\"; // Assign dishes or empty strings\n      return acc;\n    }, {});\n  });\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 700\n      },\n      \"aria-label\": \"customized table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), daysOfWeek.map(day => /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"center\",\n            children: day\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: Object.entries(structuredMenu).map(([className, dishes]) => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: className\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), daysOfWeek.map(day => /*#__PURE__*/_jsxDEV(StyledTableCell, {\n            align: \"center\",\n            children: [dishes[day] || \"-\", \" \"]\n          }, day, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this))]\n        }, className, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_c3 = CustomizedTables;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledTableCell\");\n$RefreshReg$(_c2, \"StyledTableRow\");\n$RefreshReg$(_c3, \"CustomizedTables\");","map":{"version":3,"names":["React","styled","Table","TableBody","TableCell","tableCellClasses","TableContainer","TableHead","TableRow","Paper","jsxDEV","_jsxDEV","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","_c","StyledTableRow","action","hover","border","_c2","daysOfWeek","CustomizedTables","parsedMenu","children","fileName","_jsxFileName","lineNumber","columnNumber","menuData","split","forEach","entry","className","dishes","structuredMenu","Object","keys","reduce","acc","day","shift","component","sx","minWidth","map","align","entries","scope","_c3","$RefreshReg$"],"sources":["S:/Program/GitHub/whatSNext/front/src/element/CustomizedTables.js"],"sourcesContent":["import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\r\n  [`&.${tableCellClasses.head}`]: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  [`&.${tableCellClasses.body}`]: {\r\n    fontSize: 14,\r\n  },\r\n}));\r\n\r\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\r\n  '&:nth-of-type(odd)': {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n  // hide last border\r\n  '&:last-child td, &:last-child th': {\r\n    border: 0,\r\n  },\r\n}));\r\n\r\nconst daysOfWeek = [\"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\", \"SUN\"];\r\n\r\nexport default function CustomizedTables({ parsedMenu }) {\r\n  // If no menu data is available, display a message\r\n  if (!parsedMenu) {\r\n    return <div>No menu data available</div>;\r\n  }\r\n\r\n  // Parse the string `parsedMenu` into a usable object format\r\n  const menuData = {};\r\n\r\n  parsedMenu.split('; ').forEach(entry => {\r\n    const [className, dishes] = entry.split(': ');\r\n    menuData[className] = dishes.split(', ');\r\n  });\r\n\r\n  // We will assume for this example that dishes for each class apply to all days\r\n  const structuredMenu = {};\r\n  Object.keys(menuData).forEach(className => {\r\n    structuredMenu[className] = daysOfWeek.reduce((acc, day) => {\r\n      acc[day] = menuData[className].shift() || \"\"; // Assign dishes or empty strings\r\n      return acc;\r\n    }, {});\r\n  });\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Category</StyledTableCell>\r\n            {daysOfWeek.map(day => (\r\n              <StyledTableCell key={day} align=\"center\">\r\n                {day}\r\n              </StyledTableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {Object.entries(structuredMenu).map(([className, dishes]) => (\r\n            <StyledTableRow key={className}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {className}\r\n              </StyledTableCell>\r\n              {daysOfWeek.map(day => (\r\n                <StyledTableCell key={day} align=\"center\">\r\n                  {dishes[day] || \"-\"} {/* Display dish or a dash if empty */}\r\n                </StyledTableCell>\r\n              ))}\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}