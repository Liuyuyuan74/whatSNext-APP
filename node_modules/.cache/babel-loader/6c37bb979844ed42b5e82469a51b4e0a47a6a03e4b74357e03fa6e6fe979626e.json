{"ast":null,"code":"var _jsxFileName = \"S:\\\\Program\\\\GitHub\\\\whatSNext\\\\front\\\\src\\\\element\\\\GetNextWeekMenu.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GetNextWeekMenu() {\n  _s();\n  const [menu, setMenu] = useState(null); // State to store the menu\n  const [error, setError] = useState(null); // State to store errors\n  const [loading, setLoading] = useState(false); // Loading state\n\n  // Function to fetch menu when button is clicked\n  const fetchMenu = async () => {\n    setLoading(true); // Set loading to true when fetching begins\n    setError(null); // Clear any previous errors\n    try {\n      const response = await fetch('https://htjdonjs8c.execute-api.us-east-2.amazonaws.com/test', {\n        method: 'GET',\n        // or 'POST', depending on your API\n        headers: {\n          'Content-Type': 'application/json' // Specify the content type\n          // Add any additional headers here, such as authorization tokens if needed\n          // 'Authorization': 'Bearer your-token-here'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n      const data = await response.json();\n      setMenu(data); // Set the fetched menu\n    } catch (err) {\n      console.error('Error fetching menu:', err);\n      setError('Failed to fetch the menu. Please try again.');\n    } finally {\n      setLoading(false); // Set loading to false after fetching completes\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        gutterBottom: true,\n        style: {\n          marginBottom: '10px'\n        },\n        children: \"Click Button to Generate Menu of Next Week\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        style: styles.button,\n        onClick: fetchMenu,\n        disabled: loading,\n        children: loading ? 'Loading...' : 'GENERATE'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), menu && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        style: {\n          marginTop: '20px'\n        },\n        children: [\"Next week's menu: \", JSON.stringify(menu, null, 2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        style: {\n          marginTop: '20px',\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(GetNextWeekMenu, \"rT3YorUYQUi0qjDa1Mwrh7a7i/E=\");\n_c = GetNextWeekMenu;\nconst styles = {\n  button: {\n    width: '200px',\n    // Button width\n    height: '60px',\n    // Button height\n    fontSize: '18px' // Text size\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"GetNextWeekMenu\");","map":{"version":3,"names":["React","Box","Typography","Button","useState","jsxDEV","_jsxDEV","GetNextWeekMenu","_s","menu","setMenu","error","setError","loading","setLoading","fetchMenu","response","fetch","method","headers","ok","Error","status","data","json","err","console","children","sx","textAlign","variant","gutterBottom","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","styles","button","onClick","disabled","marginTop","JSON","stringify","color","_c","width","height","fontSize","$RefreshReg$"],"sources":["S:/Program/GitHub/whatSNext/front/src/element/GetNextWeekMenu.js"],"sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport { useState } from 'react';\r\n\r\nexport default function GetNextWeekMenu() {\r\n  const [menu, setMenu] = useState(null); // State to store the menu\r\n  const [error, setError] = useState(null); // State to store errors\r\n  const [loading, setLoading] = useState(false); // Loading state\r\n\r\n  // Function to fetch menu when button is clicked\r\n  const fetchMenu = async () => {\r\n    setLoading(true); // Set loading to true when fetching begins\r\n    setError(null); // Clear any previous errors\r\n    try {\r\n      const response = await fetch('https://htjdonjs8c.execute-api.us-east-2.amazonaws.com/test', {\r\n        method: 'GET', // or 'POST', depending on your API\r\n        headers: {\r\n          'Content-Type': 'application/json', // Specify the content type\r\n          // Add any additional headers here, such as authorization tokens if needed\r\n          // 'Authorization': 'Bearer your-token-here'\r\n        },\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Error: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setMenu(data); // Set the fetched menu\r\n    } catch (err) {\r\n      console.error('Error fetching menu:', err);\r\n      setError('Failed to fetch the menu. Please try again.');\r\n    } finally {\r\n      setLoading(false); // Set loading to false after fetching completes\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Box sx={{ textAlign: 'center' }}>\r\n        <Typography variant=\"h3\" gutterBottom style={{ marginBottom: '10px' }}>\r\n          Click Button to Generate Menu of Next Week\r\n        </Typography>\r\n        <Button variant=\"contained\" style={styles.button} onClick={fetchMenu} disabled={loading}>\r\n          {loading ? 'Loading...' : 'GENERATE'}\r\n        </Button>\r\n\r\n        {/* Display loading indicator */}\r\n        {loading && <Typography variant=\"body1\">Loading...</Typography>}\r\n\r\n        {/* Display the fetched menu */}\r\n        {menu && (\r\n          <Typography variant=\"body1\" style={{ marginTop: '20px' }}>\r\n            Next week's menu: {JSON.stringify(menu, null, 2)}\r\n          </Typography>\r\n        )}\r\n\r\n        {/* Display any error */}\r\n        {error && (\r\n          <Typography variant=\"body1\" style={{ marginTop: '20px', color: 'red' }}>\r\n            {error}\r\n          </Typography>\r\n        )}\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  button: {\r\n    width: '200px', // Button width\r\n    height: '60px', // Button height\r\n    fontSize: '18px', // Text size\r\n  },\r\n};"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5BD,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAChB,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,6DAA6D,EAAE;QAC1FC,MAAM,EAAE,KAAK;QAAE;QACfC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB,CAAE;UACpC;UACA;QACF;MACF,CAAC,CAAC;MAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,UAAUL,QAAQ,CAACM,MAAM,EAAE,CAAC;MAC9C;MAEA,MAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCd,OAAO,CAACa,IAAI,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACf,KAAK,CAAC,sBAAsB,EAAEc,GAAG,CAAC;MAC1Cb,QAAQ,CAAC,6CAA6C,CAAC;IACzD,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB;EACF,CAAC;EAED,oBACER,OAAA;IAAAqB,QAAA,eACErB,OAAA,CAACL,GAAG;MAAC2B,EAAE,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAF,QAAA,gBAC/BrB,OAAA,CAACJ,UAAU;QAAC4B,OAAO,EAAC,IAAI;QAACC,YAAY;QAACC,KAAK,EAAE;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAAN,QAAA,EAAC;MAEvE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACb/B,OAAA,CAACH,MAAM;QAAC2B,OAAO,EAAC,WAAW;QAACE,KAAK,EAAEM,MAAM,CAACC,MAAO;QAACC,OAAO,EAAEzB,SAAU;QAAC0B,QAAQ,EAAE5B,OAAQ;QAAAc,QAAA,EACrFd,OAAO,GAAG,YAAY,GAAG;MAAU;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,EAGRxB,OAAO,iBAAIP,OAAA,CAACJ,UAAU;QAAC4B,OAAO,EAAC,OAAO;QAAAH,QAAA,EAAC;MAAU;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,EAG9D5B,IAAI,iBACHH,OAAA,CAACJ,UAAU;QAAC4B,OAAO,EAAC,OAAO;QAACE,KAAK,EAAE;UAAEU,SAAS,EAAE;QAAO,CAAE;QAAAf,QAAA,GAAC,oBACtC,EAACgB,IAAI,CAACC,SAAS,CAACnC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;MAAA;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CACb,EAGA1B,KAAK,iBACJL,OAAA,CAACJ,UAAU;QAAC4B,OAAO,EAAC,OAAO;QAACE,KAAK,EAAE;UAAEU,SAAS,EAAE,MAAM;UAAEG,KAAK,EAAE;QAAM,CAAE;QAAAlB,QAAA,EACpEhB;MAAK;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CACb;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC7B,EAAA,CA9DuBD,eAAe;AAAAuC,EAAA,GAAfvC,eAAe;AAgEvC,MAAM+B,MAAM,GAAG;EACbC,MAAM,EAAE;IACNQ,KAAK,EAAE,OAAO;IAAE;IAChBC,MAAM,EAAE,MAAM;IAAE;IAChBC,QAAQ,EAAE,MAAM,CAAE;EACpB;AACF,CAAC;AAAC,IAAAH,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}